{"version":3,"sources":["logo.svg","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","userInp","setInp","todo","setTodo","flag","setFlag","type","onChange","e","target","value","onClick","preventDefault","arr","addTodo","changeFlag","map","items","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,I,0BCiCAA,MA/Bf,WAEG,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAqBF,mBAAS,CAAC,cAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAqBJ,oBAAS,GAA9B,mBAAOK,EAAP,KAAYC,EAAZ,KAUA,OACI,qCACI,oEACA,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAKP,EAAOO,EAAEC,OAAOC,UACnD,wBAAQC,QAAS,SAACH,IAb1B,SAAiBA,GACbA,EAAEI,iBACFT,GAAQ,SAAAU,GAAG,4BAAMA,GAAN,CAAUb,OAWMc,CAAQN,IAA/B,sBAAqD,uBACrD,wBAAQG,QAAS,SAACH,IAV1B,SAAoBA,GAEhBA,EAAEI,iBACGP,GAALD,GAO2BW,CAAWP,IAAlC,0BAEIJ,EAAKF,EAAKc,KAAI,SAACC,GACX,OACI,8BAAMA,OAEX,4BCdHC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c27b76c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react'\r\n\r\nfunction Todo()\r\n{\r\n   const [userInp,setInp]=useState('')\r\n   const [todo,setTodo]=useState([\"Todo List\"])\r\n   const [flag,setFlag]=useState(false)\r\n   function addTodo(e){\r\n       e.preventDefault()\r\n       setTodo(arr=>[...arr,userInp])\r\n   }\r\n   function changeFlag(e)\r\n   {\r\n       e.preventDefault()\r\n       flag?setFlag(false):setFlag(true)\r\n   }\r\n   return(\r\n       <>\r\n           <p>ReactJs Final Logical Test Solution</p>\r\n           <input type=\"text\" onChange={(e)=>{setInp(e.target.value)}}></input>\r\n           <button onClick={(e)=>{addTodo(e)}}>Add Todo</button><br></br>\r\n           <button onClick={(e)=>{changeFlag(e)}}>Display Todo</button>\r\n           {\r\n               flag?todo.map((items)=>{\r\n                   return(\r\n                       <div>{items}</div>\r\n                   )\r\n               }):<div></div>\r\n           }\r\n       </>\r\n   )\r\n\r\n}\r\nexport default Todo","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './component/Todo'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Todo/>\n        </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}